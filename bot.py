from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
import asyncio

BOT_TOKEN = "8313231784:AAHjAafo4lU-M7gPrAdcEVfyY5GxeSncLeo"
GROUP_ID = -4849060567

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

class Form(StatesGroup):
    name = State()
    location = State()
    age = State()
    kd = State()
    source = State()
    communication = State()

@dp.message(Command("start"))
async def start(message: types.Message, state: FSMContext):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º –∑–∞—è–≤–∫—É.\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    await state.set_state(Form.name)

@dp.message(Form.name)
async def get_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–û—Ç–∫—É–¥–∞ —Ç—ã?")
    await state.set_state(Form.location)

@dp.message(Form.location)
async def get_location(message: types.Message, state: FSMContext):
    await state.update_data(location=message.text)
    await message.answer("–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
    await state.set_state(Form.age)

@dp.message(Form.age)
async def get_age(message: types.Message, state: FSMContext):
    await state.update_data(age=message.text)
    await message.answer("–ö–∞–∫–æ–π —É —Ç–µ–±—è –ö–î –≤ –∏–≥—Ä–µ?")
    await state.set_state(Form.kd)

@dp.message(Form.kd)
async def get_kd(message: types.Message, state: FSMContext):
    await state.update_data(kd=message.text)
    await message.answer("–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª –æ –Ω–∞—Å?")
    await state.set_state(Form.source)

@dp.message(Form.source)
async def get_source(message: types.Message, state: FSMContext):
    await state.update_data(source=message.text)
    await message.answer("–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ç—ã –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ (1-10)?")
    await state.set_state(Form.communication)

@dp.message(Form.communication)
async def finish(message: types.Message, state: FSMContext):
    await state.update_data(communication=message.text)
    data = await state.get_data()
    text = (
        f"üìã *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üåç –û—Ç–∫—É–¥–∞: {data['location']}\n"
        f"üéÇ –í–æ–∑—Ä–∞—Å—Ç: {data['age']}\n"
        f"üéØ –ö–î: {data['kd']}\n"
        f"üó£Ô∏è –û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª: {data['source']}\n"
        f"ü§ù –û–±—â–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {data['communication']}/10"
    )
    await bot.send_message(GROUP_ID, text, parse_mode="Markdown")
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –¢–≤–æ—è –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.")
    await state.clear()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
